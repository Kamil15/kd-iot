// <auto-generated />
using System;
using KdIoT.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace KdIoT.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240311200745_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("KdIoT.Server.Data.Device", b =>
                {
                    b.Property<Guid>("DeviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DeviceId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("KdIoT.Server.Data.Telemetry", b =>
                {
                    b.Property<long>("TelemetryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("TelemetryId"));

                    b.Property<Guid>("DeviceId")
                        .HasColumnType("uuid");

                    b.Property<float>("Humidity")
                        .HasColumnType("real");

                    b.Property<DateTime>("MeasuredTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<float>("Pressure")
                        .HasColumnType("real");

                    b.Property<DateTime>("SubmitedTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<float>("Temperature")
                        .HasColumnType("real");

                    b.HasKey("TelemetryId");

                    b.HasIndex("DeviceId");

                    b.ToTable("Telemetries");
                });

            modelBuilder.Entity("KdIoT.Server.Data.Telemetry", b =>
                {
                    b.HasOne("KdIoT.Server.Data.Device", "Device")
                        .WithMany("Telemetries")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");
                });

            modelBuilder.Entity("KdIoT.Server.Data.Device", b =>
                {
                    b.Navigation("Telemetries");
                });
#pragma warning restore 612, 618
        }
    }
}
